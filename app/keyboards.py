from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (inline)


def kb_main(lang: str = "en") -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ûï Upload new invoice", callback_data="action:new"
                )
            ],
            [InlineKeyboardButton(text="‚ÑπÔ∏è Help", callback_data="action:help")],
        ]
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (reply)


def kb_upload() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="/cancel")]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–º–æ—â–∏ (reply)


def kb_help_back() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="Back")]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (inline)




# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç—á—ë—Ç–∞ (inline)



# --- D-2: UX —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞ ---


# –£—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ build_main_kb
# def build_invoice_report(
#     text: str,
#     has_errors: bool,
#     match_results: list,
#     page: int = 1,
#     total_pages: int = 1,
#     page_size: int = 15,
# ) -> InlineKeyboardMarkup:
#     """
#     –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞:
#     [‚úèÔ∏è –†–µ–¥.n] ... (—Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
#     [‚ûï Add missing]
#     [‚Ü© Back] [‚úÖ Submit] (Submit —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫)
#     –ù–∞–≤–∏–≥–∞—Ü–∏—è: ‚óÄ 1/3 ‚ñ∂
#     """
#     # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã —Å—Ç—Ä–æ–∫ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
#     start = (page - 1) * page_size
#     end = start + page_size
#     current_rows = match_results[start:end]
#     # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—Ä–æ–∫ —Å –æ—à–∏–±–∫–∞–º–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
#     edit_buttons = [
#         InlineKeyboardButton(text=f"‚úèÔ∏è –†–µ–¥.{start + i + 1}", callback_data=f"edit:{start + i}")
#         for i, r in enumerate(current_rows)
#         if r.get("status") in ("unit_mismatch", "unknown")
#     ]
#     # –ö–Ω–æ–ø–∫–∞ Add missing (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ)
#     unknown_count = sum(1 for r in match_results if r.get("status") == "unknown")
#     add_missing_btn = None
#     if unknown_count > 0:
#         add_missing_btn = InlineKeyboardButton(
#             text="‚ûï Add missing", callback_data="inv_add_missing"
#         )
#     # –ö–Ω–æ–ø–∫–∞ Back
#     back_btn = InlineKeyboardButton(text="‚Ü© Back", callback_data="inv_cancel_edit")
#     # –ö–Ω–æ–ø–∫–∞ Submit (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫)
#     submit_btn = None
#     if not has_errors:
#         submit_btn = InlineKeyboardButton(text="‚úÖ Submit", callback_data="inv_submit")
#     # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, submit_btn –æ—Å—Ç–∞–µ—Ç—Å—è None –∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
#     # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
#     nav_buttons = []


# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (inline)





# –û—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–ø–æ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ)








# –ö–Ω–æ–ø–∫–∞ Set supplier (inline)


def kb_set_supplier() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úèÔ∏è Set supplier", callback_data="set_supplier")]
        ]
    )


# –ê–≤—Ç–æ-–∫–Ω–æ–ø–∫–∏ unit (inline)


def kb_unit_buttons() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=unit, callback_data=f"unit:{unit}")
                for unit in ["kg", "g", "l", "ml", "pcs"]
            ]
        ]
    )


def kb_cancel_all() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üö´ Cancel", callback_data="cancel:all")]
        ]
    )


def build_main_kb(has_errors: bool = True) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ —Å 2-3 –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
    
    Args:
        has_errors: –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–æ–∫ –≤ –æ—Ç—á–µ—Ç–µ
        
    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏:
        - "‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" - –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        - "‚Ü© –û—Ç–º–µ–Ω–∞" - –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        - "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫ (has_errors=False)
    """
    keyboard_rows = [
        [
            InlineKeyboardButton(
                text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit:free"
            ),
            InlineKeyboardButton(
                text="‚Ü© –û—Ç–º–µ–Ω–∞", callback_data="cancel:all"
            )
        ]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫
    if not has_errors:
        keyboard_rows.append([
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm:invoice"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard_rows)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ build_main_kb
def build_edit_keyboard(has_errors: bool = True) -> InlineKeyboardMarkup:
    """
    –£—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—ã–π build_main_kb.
    
    Args:
        has_errors: –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –æ—à–∏–±–æ–∫ –≤ –æ—Ç—á–µ—Ç–µ
        
    Returns:
        InlineKeyboardMarkup —Å –Ω–æ–≤—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    """
    return build_main_kb(has_errors)
