import logging

from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardMarkup,
)

from app.i18n import t

logger = logging.getLogger(__name__)


def kb_main(lang: str = "en") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    logger.debug(f"Creating main menu keyboard with lang={lang}")

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì∑ " + t("buttons.new_photo", {"default": "–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ"}, lang),
                    callback_data="action:new",
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùì " + t("buttons.help", {"default": "–ü–æ–º–æ—â—å"}, lang),
                    callback_data="action:help",
                )
            ],
        ]
    )

    return keyboard


def kb_upload(lang: str = "en") -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–∂–∏–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ.

    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    """
    logger.debug(f"Creating upload keyboard with lang={lang}")

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå " + t("buttons.cancel", {"default": "–û—Ç–º–µ–Ω–∞"}, lang))]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )

    return keyboard


def kb_help_back(lang: str = "en") -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –ø–æ–º–æ—â–∏ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".

    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        ReplyKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    """
    logger.debug(f"Creating help-back keyboard with lang={lang}")

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚óÄÔ∏è " + t("buttons.back", {"default": "–ù–∞–∑–∞–¥"}, lang))]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )

    return keyboard


def kb_set_supplier(lang: str = "en") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.

    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    """
    logger.debug(f"Creating set-supplier keyboard with lang={lang}")

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üè¢ " + t("buttons.set_supplier", {"default": "–£–∫–∞–∑–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"}, lang),
                    callback_data="set_supplier",
                )
            ]
        ]
    )

    return keyboard


def kb_unit_buttons() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è.

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
    """
    logger.debug("Creating unit buttons keyboard")

    # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è
    unit_map = {
        "kg": "‚öñÔ∏è kg",  # –≤–µ—Å—ã
        "g": "üßÇ g",  # —â–µ–ø–æ—Ç–∫–∞
        "l": "ü•õ l",  # —Å—Ç–∞–∫–∞–Ω
        "ml": "üíß ml",  # –∫–∞–ø–ª—è
        "pcs": "üî¢ pcs",  # —á–∏—Å–ª–∞
    }

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=unit_map.get(unit, unit), callback_data=f"unit:{unit}")
                for unit in ["kg", "g"]
            ],
            [
                InlineKeyboardButton(text=unit_map.get(unit, unit), callback_data=f"unit:{unit}")
                for unit in ["l", "ml", "pcs"]
            ],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel:all")],
        ]
    )

    return keyboard


def kb_cancel_all(lang: str = "en") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã.

    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
    """
    logger.debug(f"Creating cancel-all keyboard with lang={lang}")

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå " + t("buttons.cancel", {"default": "–û—Ç–º–µ–Ω–∞"}, lang),
                    callback_data="cancel:all",
                )
            ]
        ]
    )

    return keyboard


def build_main_kb(has_errors: bool = True, lang: str = "en") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç—á–µ—Ç–∞ - —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ—à–∏–±–æ–∫.
    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–º–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã.

    Args:
        has_errors: –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ –æ—Ç—á–µ—Ç–µ
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫) –∏–ª–∏ –ø—É—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    logger.debug(f"Creating simplified keyboard with has_errors={has_errors}, lang={lang}")

    # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å—Ä–∞–∑—É –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã)
    if has_errors:
        return InlineKeyboardMarkup(inline_keyboard=[])

    # –ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    confirm_button = InlineKeyboardButton(
        text="‚úÖ " + t("buttons.confirm", {"default": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"}, lang),
        callback_data="confirm:invoice",
    )

    return InlineKeyboardMarkup(inline_keyboard=[[confirm_button]])


def build_edit_keyboard(has_errors: bool = True, lang: str = "en") -> InlineKeyboardMarkup:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é build_main_kb.

    Args:
        has_errors: –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∏ –≤ –æ—Ç—á–µ—Ç–µ
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        InlineKeyboardMarkup –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ build_main_kb
    """
    logger.debug(f"Called legacy build_edit_keyboard with has_errors={has_errors}, lang={lang}")
    return build_main_kb(has_errors, lang)


def kb_edit_field(lang: str = "en") -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ–π –∏ –æ—Ç–º–µ–Ω—ã
    """
    logger.debug(f"Creating edit-field keyboard with lang={lang}")

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìù " + t("buttons.edit_name", {"default": "–ù–∞–∑–≤–∞–Ω–∏–µ"}, lang),
                    callback_data="edit_field:name",
                ),
                InlineKeyboardButton(
                    text="üî¢ " + t("buttons.edit_qty", {"default": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"}, lang),
                    callback_data="edit_field:qty",
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚öñÔ∏è " + t("buttons.edit_unit", {"default": "–ï–¥. –∏–∑–º."}, lang),
                    callback_data="edit_field:unit",
                ),
                InlineKeyboardButton(
                    text="üí∞ " + t("buttons.edit_price", {"default": "–¶–µ–Ω–∞"}, lang),
                    callback_data="edit_field:price",
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå " + t("buttons.cancel", {"default": "–û—Ç–º–µ–Ω–∞"}, lang),
                    callback_data="cancel:all",
                )
            ],
        ]
    )

    return keyboard
