from app.formatter import build_report
import re


def test_report_layout_strict():
    parsed_data = {"supplier": "UD. WIDI WIGUNA", "date": "2025-04-29"}
    match_results = [
        {
            "name": "olive oil orille 5liter",
            "qty": 2,
            "unit": "gh",
            "price": None,
            "status": "unknown",
        },
        {
            "name": "lumajang",
            "qty": 30,
            "unit": "kg",
            "price": None,
            "status": "unknown",
        },
        {
            "name": "verylongproductnamethatiswaytoolong",
            "qty": 1,
            "unit": "kg",
            "price": 1234.56,
            "status": "ok",
        },
    ]
    report = build_report(parsed_data, match_results)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–ø–∫—É
    assert re.search(r"üì¶ \*Supplier:\* UD\\\. WIDI WIGUNA", report)
    assert "üìÜ *Invoice date:* 2025\\-04\\-29" in report
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (—Å—Ç—Ä–æ–∫–∞ –∏–∑ 10+ —Å–∏–º–≤–æ–ª–æ–≤ '‚îÄ')
    assert re.search(r"‚îÄ{10,}", report)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–æ–≤–Ω–æ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏-–¥–µ–ª–∏—Ç–µ–ª—è (–ª—é–±–∞—è –¥–ª–∏–Ω–∞, –Ω–æ —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏)
    divider_lines = [line for line in report.splitlines() if set(line) == {"‚îÄ"}]
    assert len(divider_lines) == 3, f"divider_lines: {divider_lines}"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º code block –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    assert "#  NAME" in report
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–µ–∑–∫—É –¥–ª–∏–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏
    assert "verylongproductnameth‚Ä¶" in report
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PRICE = '‚Äî' –µ—Å–ª–∏ None
    assert "‚Äî" in report
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    assert "ok" in report or "need check" in report
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –≤–Ω—É—Ç—Ä–∏ markdown code block (```)
    assert report.count("```") == 2
    table_block = report.split("```", 2)[1]
    assert "#  NAME" in table_block
    assert "verylongproductnameth‚Ä¶" in table_block
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤–Ω–µ code block
    summary_line = report.strip().split("\n")[-1]
    assert "ok" in summary_line or "need check" in summary_line
